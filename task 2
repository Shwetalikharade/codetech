import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import org.json.JSONObject;

public class WeatherApp {

   
    private static final String API_KEY = "YOUR_API_KEY";
    private static final String BASE_URL = "https://api.openweathermap.org/data/2.5/weather";

    public static void main(String[] args) {
        String city = "London";

        try {
            
            String urlString = BASE_URL + "?q=" + city + "&appid=" + API_KEY + "&units=metric";
            URL url = new URL(urlString);

            // Open a connection to the API
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");

            // Check the response code
            int responseCode = connection.getResponseCode();
            if (responseCode == HttpURLConnection.HTTP_OK) {
                // Read the response
                BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
                StringBuilder response = new StringBuilder();
                String line;
                while ((line = in.readLine()) != null) {
                    response.append(line);
                }
                in.close();

        
                parseAndDisplayWeatherData(response.toString());
            } else {
                System.out.println("Error: Unable to fetch weather data. Response Code: " + responseCode);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private static void parseAndDisplayWeatherData(String jsonResponse) {
        try {
            // Parse JSON response
            JSONObject jsonObject = new JSONObject(jsonResponse);
            String cityName = jsonObject.getString("name");
            JSONObject main = jsonObject.getJSONObject("main");
            double temperature = main.getDouble("temp");
            int humidity = main.getInt("humidity");
            JSONObject weather = jsonObject.getJSONArray("weather").getJSONObject(0);
            String description = weather.getString("description");

            // Display weather data
            System.out.println("Weather Information for " + cityName + ":");
            System.out.println("Temperature: " + temperature + "Â°C");
            System.out.println("Humidity: " + humidity + "%");
            System.out.println("Description: " + description);
        } catch (Exception e) {
            System.out.println("Error parsing JSON response.");
            e.printStackTrace();
        }
    }
}
